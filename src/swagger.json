{
  "openapi": "3.0.3",
  "info": {
    "title": "SafeRide TakeHome Excercise API - OpenAPI 3.0",
    "description": "Some useful links:\n- [The SafeRide Auth Service repository](https://github.com/mohamedr20/saferide-auth-service)\n- [The source API definition for the Auth Service](https://github.com/mohamedr20/saferide-auth-service/blob/main/src/swagger.json)",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "mohamedr201@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000/api/"
    }
  ],
  "tags": [
    {
      "name": "auth",
      "description": "Operations about authorization"
    },
    {
      "name": "user",
      "description": "Operations about user"
    }
  ],
  "paths": {
    "/auth/login": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Log In",
        "description": "Will check the user's credentials and provide an access token if credentials are valid",
        "operationId": "logIn",
        "requestBody": {
          "description": "Log in credentials",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "john@email.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "testPassword"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "successfull operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessToken"
                }
              }
            }
          }
        }
      }
    },
    "/user": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Create user",
        "description": "Will create a user with the provided user info.",
        "operationId": "createUser",
        "requestBody": {
          "description": "Created user object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/user/{userId}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get user by user id",
        "description": "Fetch a single user given a user id",
        "operationId": "getUserById",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The user id associated with a user in the database. Insert 1 as the user id  for testing.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Invalid userId supplied"
          },
          "401": {
            "description": "Access token is missing or invalid"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "AccessToken": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "theUser"
          },
          "firstName": {
            "type": "string",
            "example": "John"
          },
          "lastName": {
            "type": "string",
            "example": "James"
          },
          "email": {
            "type": "string",
            "example": "john@email.com"
          },
          "password": {
            "type": "string",
            "example": "testPassword"
          },
          "phone": {
            "type": "string",
            "example": "200-600-1234"
          }
        }
      },
      "ApiResponse": {
        "type": "object",
        "properties": {
          "httpCode": {
            "type": "integer",
            "format": "int32",
            "example": 200
          },
          "message": {
            "type": "string",
            "example": "string"
          }
        }
      }
    }
  }
}